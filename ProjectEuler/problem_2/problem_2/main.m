//
//  main.m
//  problem_2
//*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

//*By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#import <Foundation/Foundation.h>

int main(int argc, const char * argv[]) {
    @autoreleasepool {

        int number1 = 1;
        int number2 = 1;
        NSMutableArray *arrayInput = [[NSMutableArray alloc]init];
        
        int answer = 0;
        
        // array input function
        for ( int x = 0; x <= 100; x++) {
           int sum = number1 + number2;
            
            if (sum <= 4000000) {
                number1 = number2;
                number2 = sum;
                NSNumber *input = [[NSNumber alloc]initWithInt:number2];
                [arrayInput addObject:input];
                
            }else {
                break;
            }
            
            
//            NSLog(@"x is now %d",x);
//            NSLog(@"number 1 is now %d", number1);
//            NSLog(@"number 2 is now %d", number2);
            NSLog(@"sum is now %d", sum);
        }
        
        for (NSNumber *e in arrayInput) {
            int numberTest = [e intValue];
            NSLog(@" %d is now being tested", numberTest);
            
            if (numberTest % 2 ==0) {
                answer += numberTest;
                NSLog(@"answer is now %d", answer); 
            }
          
        }
        NSLog(@"answer is %d", answer);
    
    }
    return 0;
}
